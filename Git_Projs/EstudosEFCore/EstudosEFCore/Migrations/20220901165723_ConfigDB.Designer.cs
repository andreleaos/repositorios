// <auto-generated />
using System;
using EstudosEFCore.Models.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstudosEFCore.Migrations
{
    [DbContext(typeof(ControleFrotaContext))]
    [Migration("20220901165723_ConfigDB")]
    partial class ConfigDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EstudosEFCore.Models.Domain.Entities.Motorista", b =>
                {
                    b.Property<string>("MotoristaId")
                        .HasColumnName("motor_id")
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ativo")
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("CNH")
                        .HasColumnName("cnh")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ValidadeCNH")
                        .HasColumnName("validadeCNH")
                        .HasColumnType("datetime");

                    b.HasKey("MotoristaId");

                    b.ToTable("tbl_motor");
                });

            modelBuilder.Entity("EstudosEFCore.Models.Domain.Entities.MotoristaVeiculo", b =>
                {
                    b.Property<string>("VeiculoId")
                        .HasColumnName("veicl_id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MotoristaId")
                        .HasColumnName("motor_id")
                        .HasColumnType("varchar(50)");

                    b.HasKey("VeiculoId", "MotoristaId");

                    b.HasIndex("MotoristaId");

                    b.ToTable("tbl_motr_veicl");
                });

            modelBuilder.Entity("EstudosEFCore.Models.Domain.Entities.Veiculo", b =>
                {
                    b.Property<string>("VeiculoId")
                        .HasColumnName("veicl_id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Ano")
                        .HasColumnName("ano")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnName("modelo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Placa")
                        .HasColumnName("placa")
                        .HasColumnType("varchar(20)");

                    b.HasKey("VeiculoId");

                    b.ToTable("tbl_veicl");
                });

            modelBuilder.Entity("EstudosEFCore.Models.Domain.Entities.MotoristaVeiculo", b =>
                {
                    b.HasOne("EstudosEFCore.Models.Domain.Entities.Motorista", "Motorista")
                        .WithMany("Veiculos")
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstudosEFCore.Models.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Motoristas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
